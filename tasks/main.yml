---
- name: Create Tomcat group
  ansible.builtin.group:
    name: "{{ _tomcat.group }}"
    state: present
    system: yes

- name: Create Tomcat user
  ansible.builtin.user:
    name: "{{ _tomcat.user }}"
    group: "{{ _tomcat.group }}"
    groups: '{{ _tomcat.additional_groups | join(",") }}'
    state: present
    system: yes
    shell: '/bin/nologin'
    createhome: no
    home: '/tmp'

- name: Create tomcat installation dir
  ansible.builtin.file:
    dest: "{{ _tomcat.install_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Download Tomcat
  ansible.builtin.unarchive:
    src: "{{ _tomcat.url }}"
    remote_src: yes
    dest: "{{ _tomcat.install_dir }}"
    extra_opts: "--strip=1"
    owner: root
    group: root
    mode: 0755

- name: Remove superfluous Tomcat files
  ansible.builtin.file:
    path: "{{ _tomcat.install_dir }}/{{ item }}"
    state: absent
  with_items:
    - "webapps/examples"
    - "webapps/docs"

- name: Set Tomcat directory permissions
  ansible.builtin.file:
    name: "{{ _tomcat.install_dir }}/{{ item.name }}"
    owner: "{{ item.owner | default(_tomcat.user) }}"
    group: "{{ item.group | default(_tomcat.group) }}"
    state: directory
    mode: '{{ item.mode | default("0750") }}'
    recurse: '{{ item.recurse | default("no") }}'
  with_items:
    - { name: "webapps" }
    - { name: "temp" }
    - { name: "work" }
    - { name: "logs" }
    - { name: "conf", owner: "root", mode: "u=rwX,g=rX,o=", recurse: "yes" }
    - { name: "lib", owner: "root", mode: "u=rwX,g=rX,o=rX", recurse: "yes" }
    - { name: "bin", owner: "root", mode: "u=rwX,g=rX,o=rX", recurse: "yes" }

- name: Set Tomcat script execute permissions
  ansible.builtin.file:
    name: "{{ _tomcat.install_dir }}/bin/{{ item }}"
    state: file
    mode: 0755
    owner: root
    group: root
  with_items:
    - catalina.sh
    - configtest.sh
    - daemon.sh
    - digest.sh
    - setclasspath.sh
    - shutdown.sh
    - startup.sh
    - tool-wrapper.sh
    - version.sh

- name: Create Tomcat Catalina directories
  ansible.builtin.file:
    name: "{{ _tomcat.install_dir }}/conf/Catalina/localhost"
    state: directory
    owner: "{{ _tomcat.user }}"
    group: "{{ _tomcat.group }}"
    mode: 0750

- name: Create tomcat systemd scripts
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    mode: 0640
    owner: root
    group: "{{ _tomcat.group }}"
  with_items:
    - "etc/systemd/system/tomcat.service"
